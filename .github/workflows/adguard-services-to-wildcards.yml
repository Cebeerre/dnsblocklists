name: Build AdGuard services -> wildcard lists

on:
  schedule:
    - cron: "20 3 * * 1"   # weekly: Mon 03:20 UTC
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SRC_INDEX: https://api.github.com/repos/AdguardTeam/HostlistsRegistry/contents/services?ref=main
      HOMEPAGE: https://github.com/${{ github.repository }}
      LICENSE_URL: https://github.com/${{ github.repository }}/blob/main/LICENSE
      ORIG_SOURCE: https://github.com/AdguardTeam/HostlistsRegistry/tree/main
    steps:
      - uses: actions/checkout@v4

      - name: Install jq and yq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          curl -fsSL https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 \
            -o /usr/local/bin/yq
          chmod +x /usr/local/bin/yq

      - name: Fetch index and build per-service wildcard lists
        run: |
          set -euo pipefail
          mkdir -p webservices

          TS="$(date -u +%Y%m%d%H%M)"
          curl -fsSL "$SRC_INDEX" > /tmp/services.json

          jq -r '.[] | select(.type=="file") | [.name, .download_url] | @tsv' /tmp/services.json \
          | while IFS=$'\t' read -r NAME DL; do
              echo "Processing: $NAME"
              TMP="/tmp/svc.yml"
              curl -fsSL "$DL" -o "$TMP"

              SID_RAW="$(yq -r '.id // .name // "unknown"' "$TMP")"
              SNAME="$(yq -r '.name // .id // "unknown"' "$TMP")"
              # sanitize id -> lowercase, spaces & non-alnum => underscore
              SID="$(echo "$SID_RAW" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9]+/_/g')"

              yq -r '.rules // [] | .[]?' "$TMP" > /tmp/rules.txt || true

              awk '
                BEGIN{FS="^"}
                /^[[:space:]]*@@/ {next}                      # skip allowlist exceptions
                /^[[:space:]]*\|\|[^|]/ {
                  gsub(/\r/,"")
                  line=$0
                  split(line, parts, /\^/)
                  dom=parts[1]
                  sub(/^[[:space:]]*\|\|/, "", dom)
                  sub(/[,|$].*$/, "", dom)                     # drop params if any
                  # must look like a domain
                  if (dom ~ /\./ && dom !~ /:\/\//) {
                    sub(/^\.+/,"",dom); sub(/\.+$/,"",dom)
                    # lowercase
                    dom=tolower(dom)
                    print "*." dom
                  }
                }
              ' /tmp/rules.txt | sort -u > "/tmp/${SID}.wild"

              OUT="webservices/${SID}_asterisk.txt"
              {
                echo "# Title: Blocklist for ${SNAME}"
                echo "# Description: Blocks ${SNAME} content"
                echo "# Homepage: ${HOMEPAGE}"
                echo "# License: ${LICENSE_URL}"
                echo "# Version: ${TS}"
                echo "# Original Source: ${ORIG_SOURCE}"
                echo "# Syntax: Domains Wildcard - Blocky (v0.23 or newer)"
                echo "#"
                cat "/tmp/${SID}.wild"
              } > "$OUT"

              echo "Wrote $OUT (lines: $(wc -l < "$OUT"))"
            done

      - name: Commit & push if changed
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(services): refresh wildcard lists from AdGuard registry"
          file_pattern: "webservices/*.txt"
