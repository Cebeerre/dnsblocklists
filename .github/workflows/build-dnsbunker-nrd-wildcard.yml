name: Build DNSBunker NRD wildcard (14-day)

on:
  schedule:
    - cron: "0 */1 * * *" 
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build DNSBunker 14-day NRD (wildcard)
        run: |
          set -euo pipefail
          mkdir -p NRD .checksums

          SRC="https://codeberg.org/xRuffKez/NRD/raw/branch/main/lists/14-day/domains-only/nrd-14day"
          OUT="NRD/nrd14_wildcard_dnsbuker.txt"   # filename as requested (dnsbuker)

          # Version stamp (UTC)
          TS="$(date -u +%Y%m%d%H%M)"

          TMP="$(mktemp)"
          curl -fsSL \
            --connect-timeout 5 \
            --max-time 20 \
            --retry 2 \
            --retry-delay 1 \
            --retry-all-errors \
            "$SRC" -o "$TMP"

          # Checksum guard to skip if unchanged
          NEWSUM="$(sha256sum "$TMP" | cut -d' ' -f1)"
          CHECKFILE=".checksums/$(basename "$OUT").sha256"

          if [ -f "$CHECKFILE" ] && grep -q "$NEWSUM" "$CHECKFILE"; then
            echo "No changes in upstream. Skipping rebuild."
            rm -f "$TMP"
            exit 0
          fi

          # Convert to wildcard (*.domain), filter out comments/empties, unique
          DOMTMP="${OUT}.domains"
          awk '/^#/ {next} NF {gsub(/\r/,""); print "*." $0}' "$TMP" \
            | sort -u > "$DOMTMP"

          ENTRIES="$(wc -l < "$DOMTMP" | tr -d ' ')"

          {
            echo "# Title: DNSBunker NRD (14-day) - wildcard"
            echo "# Description: Newly Registered Domains for the last 14 days (source: xRuffKez's DNSBunker)"
            echo "# Homepage: https://github.com/${GITHUB_REPOSITORY}"
            echo "# License: https://github.com/${GITHUB_REPOSITORY}/blob/main/LICENSE"
            echo "# Version: ${TS}"
            echo "# Original Source: https://codeberg.org/xRuffKez/NRD"
            echo "# Syntax: Domains Wildcard - Blocky (v0.23 or newer)"
            echo "# Entries: ${ENTRIES}"
            echo "#"
            cat "$DOMTMP"
          } > "$OUT"

          # Persist checksum
          echo "$NEWSUM" > "$CHECKFILE"

          echo "Wrote ${OUT} (entries: ${ENTRIES})"
          rm -f "$TMP" "$DOMTMP"

      - name: Commit & push if changed
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(nrd:dnsbunker): refresh 14-day wildcard list (only if upstream changed)"
          add_options: "-A"
          
